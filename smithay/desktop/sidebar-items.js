initSidebarItems({"enum":[["Kind","Abstraction around different toplevel kinds"],["PopupGrabError","Defines the possible errors that can be returned from [`PopupManager::grab_popup`]"],["PopupKind","Represents a popup surface"],["PopupUngrabStrategy","Defines the possibly strategies for the [`PopupGrab::ungrab`] operation"]],"fn":[["draw_layer_surface","Renders a given [`LayerSurface`] using a provided renderer and frame."],["draw_window","Renders a given [`Window`] using a provided renderer and frame."],["layer_map_for_output","Retrieve a [`LayerMap`] for a given [`Output`]."]],"mod":[["space","This module contains the [`Space`] helper class as well has related rendering helpers to add custom elements or different clients to a space."],["utils","Helper functions to ease dealing with surface trees"]],"struct":[["LayerMap","Map of [`LayerSurface`]s on an [`Output`]"],["LayerSurface","A [`LayerSurface`] represents a single layer surface as given by the wlr-layer-shell protocol."],["PopupGrab","Represents the explicit grab a client requested for a popup"],["PopupKeyboardGrab","Default implementation of a [`KeyboardGrab`] for [`PopupGrab`]"],["PopupManager","Helper to track popups."],["PopupPointerGrab","Default implementation of a [`PointerGrab`] for [`PopupGrab`]"],["Window","Represents a single application window"],["WindowSurfaceType","Defines the surface types that can be queried with [`Window::surface_under`]"],["X11Surface","TODO"]]});